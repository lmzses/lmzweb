---
// src/pages/blog/[slug].astro
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import MainLayout from "../../layouts/main.astro";

interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  console.log(
    "Available posts:",
    blogPosts.map((p) => p.slug)
  ); // Debug available slugs

  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Add error handling
const { post } = Astro.props;
if (!post) {
  return Astro.redirect("/404"); // Redirect to 404 if post not found
}

const { Content } = await post.render();
---

<MainLayout
  title={`${post.data.title} | Blog`}
  description={post.data.description}
>
  <main class="py-20">
    <article class="prose prose-invert max-w-3xl mx-auto">
      <header class="mb-8">
        <h1 class="text-4xl font-bold text-white mb-4">{post.data.title}</h1>
        <div class="flex gap-3 text-sm text-neutral-500">
          <time datetime={post.data.pubDate.toISOString()}>
            {
              new Date(post.data.pubDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
          <span>Â·</span>
          <span>{post.data.readTime}</span>
        </div>
        <div class="flex justify-center mt-4">
          {
            post.data.cover && (
              <Image
                src={post.data.cover}
                alt={post.data.title}
                class="rounded-lg prose-img:rounded-lg prose-img:max-w-full prose-img:h-auto"
              />
            )
          }
        </div>
      </header>

      <div class="text-neutral-300 prose prose-invert max-w-none">
        <Content />
      </div>
    </article>
  </main>
</MainLayout>
